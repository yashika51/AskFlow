Number,Answer,Current
1,"I found the answer myself and it was very trivial and embarassing. Order variable was included twice in the dataset. I checked the correlation and got 1.0 correlation between the same variables. # Check correlation cor = df[features].corr() cor.loc[:,:] = np.tril(cor, k=-1)  cor = cor.stack() cor[(cor > 0.7) | (cor < -0.7)]  ",False
2,"You need to select the column and divide it by 1000. Pyspark cannot divide a string by 1000. import pyspark.sql.functions as F  df.withColumn(         ""date_var"",         F.from_utc_timestamp(             F.from_unixtime(F.col(""timestamp_var"") / 1000,                             ""yyyy-MM-dd HH:mm:ss""),             ""PST""         )  ",False
3,"Your code fixed should be: name = input(""Въведете име: "") Town = input(""град: "") school = input(""Училище: "") age= input(""години: "") hoby = input(""Хоби: "") sport = input(""спорт: "")  print ("""") print (""Здравейте, казвам се"" + name + "" ,аз съм на "" + age + ""години."") print ("""") print (""Аз живея в/във"" + Town + "". "" + ""Уча в"" + school + ""."") print (""Моето хоби е "" + hoby + "" ,и спортувам "" + sport + ""."") print ("""") print (""Въведете 3 числа за триъгълника"") a = int(input(""Страна А "")) b = int(input(""Страна Б "")) c = int(input(""Страна С "")) hc = int(input(""Височината на триъгълника е "")) p = a+b+c S = int((c * hc) / 2) print (""Периметъра на триъгълника е: "" + str(p) + "" ,a лицето е: "" + str(S))  ",False
4,You will need to cast the inputs to int() where you explicitly expect them to be integers. All input captured from the terminal comes across as string. Attempting to add strings just concatenates them. Division is not supported on strings hence this error that / is an invalid operand for type str. ,False
5,"Have a look at pivot_table. https://stackoverflow.com/a/40302194/5478373 has a good example of how to use the pivot_tables to sum the totals and then divide the results by that total and multiply by 100. group = pd.pivot_table(df,                         ...                        aggfunc=np.sum)           .div(len(df.index))           .mul(100)  ",True
